// docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  username       String            @id @unique
  email          String            @unique
  provider       String // "password" | "magiclink"
  password       UserPassword?
  verification   UserVerification?
  created_at     DateTime          @default(now())
  User2FA        User2FA?
  UserDeviceAuth UserDeviceAuth[]
  Post           Post[]
}

model UserPassword {
  username String @id @unique
  user     User   @relation(fields: [username], references: [username])
  value    String
}

model UserVerification {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [username], references: [username])
  username    String    @unique
  verified    Boolean   @default(false)
  verified_at DateTime?
  expiry      DateTime
}

model User2FA {
  user     User   @relation(fields: [username], references: [username])
  username String @id @unique
  secret   String @unique
}

model UserDeviceAuth {
  id        String @id
  publicKey String
  algorithm String
  user      User   @relation(fields: [username], references: [username])
  username  String @unique
}

model Authenticator {
  credentialID         String  @id
  credentialPublicKey  Bytes
  counter              BigInt
  credentialDeviceType String // 'singleDevice' | 'multiDevice'
  credentialBackedUp   Boolean
  transports           String? // ['usb' | 'ble' | 'nfc' | 'internal'] string array as csv string
}

model VerificationToken {
  id     String   @id @default(uuid())
  expiry DateTime
}

model Post {
  id           String @id @default(uuid())
  content      String
  owner        User   @relation(fields: [ownerUsername], references: [username])
  ownerUsername String
}
